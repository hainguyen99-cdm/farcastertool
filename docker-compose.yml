services:
  mongo:
    image: mongo:7
    container_name: farcaster-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7-alpine
    container_name: farcaster-redis
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: farcaster-backend
    depends_on:
      - mongo
      - redis
    environment:
      NODE_ENV: production
      PORT: 3002
      MONGODB_URI: mongodb://mongo:27017/farcaster-tool
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ENCRYPTION_KEY: 5f9c4b2a1d0e7f6a3c8b9d4e2f1a0c5b6d7e8f9a1b2c3d4e5f6a7b8c9d0e1f2a
      FARCASTER_API_URL: https://client.farcaster.xyz
      RPC_VERSION_API_KEY: 8eee3663a5b408651939a85b57a66ae07e8d51bd685bdf6dfbf9a6903860ddd6
      RPC_VERSION_SECRET: 6eaf66afd14f1dd8e9365898c494c67d190619754b731cfd06395644130e30c3
      RPC_VERSION_SECRET_KEY: 6eaf66afd14f1dd8e9365898c494c67d190619754b731cfd06395644130e30c3
    ports:
      - "3002:3002"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://backend:3002
    container_name: farcaster-frontend
    depends_on:
      - backend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://backend:3002
    expose:
      - "3000"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: farcaster-nginx
    depends_on:
      - frontend
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

volumes:
  mongo_data:


